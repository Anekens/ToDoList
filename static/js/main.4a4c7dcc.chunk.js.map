{"version":3,"sources":["components/DateForm.js","components/Priority.js","components/TaskText.js","components/AddDateForm.js","components/TodoListTask.js","components/TodoListTasks.js","components/TodoListFilter.js","components/TodoListTitle.js","api/api.js","redux/todo-reducer.js","components/AddNewItemForm.js","components/TodoList.js","api/authApi.js","redux/auth-reducer.js","components/TodolistAPP.js","components/LoginForm.jsx","components/Login.jsx","redux/app-reducer.js","App.js","redux/store.js","index.js","App.module.css"],"names":["DateForm","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","onDateChanged","e","changeDate","id","currentTarget","value","dateFormat","require","now","Date","date","setDate","concat","title","startValue","addedDate","min","react_default","a","createElement","Fragment","className","style","inpDate","type","max","autoFocus","onBlur","onChange","onClick","Priority","deactivateEditMode","priorityTitle","priority","select","onKeyDown","key","changePriority","TaskText","_useState3","_useState4","newTitle","setNewTitle","changeText","input_default","inp","onKeyPress","placeholder","AddDateForm","TodoListTask","classForTaskChecked","task","completed","taskDone","width","checkbox_default","checked","changeStatus","target","components_AddDateForm","components_TaskText","changeTitle","description","changeDescription","components_Priority","components_DateForm","changeStartDate","startDate","changeDeadline","deadline","icon_default","deleteTask","uuidv1","TodoListTasks","tasksElements","tasks","map","components_TodoListTask","es_icon","TodoListFilter","checkForAll","filterValue","checkForCompleted","checkForActive","buttons","button_default","changeFilter","size","icon","TodoListTitle","changeTodolistTitle","todoTitle","onDelete","onTitleChanged","fontSize","instance","axios","create","withCredentials","baseURL","headers","API-KEY","api","newTaskTitle","todolistId","post","get","put","delete","ADD_TASK","initialState","todolists","todoReducer","state","arguments","length","undefined","action","objectSpread2","tl","toConsumableArray","newTodolist","filter","t","taskId","newTask","obj","AddNewItemForm","error","setError","onAddItemClick","addItem","inputError","backgroundColor","opacity","addNewForm","inputAdd","labelInput","btnAdd","es_button","ConnectedTodoList","connect","deleteTaskTC","dispatch","then","res","data","resultCode","deleteTaskAC","deleteTodolistTC","deleteTodolistAC","updateTaskTC","getState","todo","find","forEach","updateTaskAC","setTasksTC","setTasksAC","items","addTaskTC","newText","item","addTaskAC","updateTodolistTC","updateTodolistAC","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","this","fetchData","setNewFilterValue","changeTask","_props$tasks","todoList","todoListHeader","components_TodoListTitle","components_AddNewItemForm","components_TodoListFilter","components_TodoListTasks","Number","authAPI","email","password","userId","login","isAuth","setAuthUserData","payload","getAuthUserData","response","_response$data$data","_login","sent","_x","authReducer","compose","auth","addTodolistTC","setTodolistsTC","logout","_ref3","_callee3","_context3","_x3","withRouter","components_TodoList","header","form","color","react_router","to","App","LoginReduxForm","reduxForm","s","formRedux","onSubmit","handleSubmit","Field","name","component","_ref2","_callee2","_context2","_x2","wrapper","components_LoginForm","formData","rememberMe","captcha","initialized","appReducer","AppContainer","app","initializeApp","promise","Promise","all","exact","path","render","components_TodolistAPP","components_Login","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","ReactDOM","react_router_dom","es","src_App","document","getElementById","module","exports","isHow"],"mappings":"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","file":"static/js/main.4a4c7dcc.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport style from '../App.module.css';\r\n\r\n\r\nexport const DateForm = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const onDateChanged = (e) => {\r\n        setEditMode(false);\r\n        props.changeDate(props.id, e.currentTarget.value);\r\n    };\r\n\r\n    let dateFormat = require('dateformat');\r\n\r\n    let now = new Date(props.date);\r\n\r\n    let setDate = props.date\r\n        ? dateFormat(now, \"dd-mm-yyyy\")\r\n        : `set ${props.title}`;\r\n\r\n    let startValue = props.date\r\n        ? props.date\r\n        : props.addedDate;\r\n\r\n    let min = new Date(props.addedDate);\r\n    let value = new Date(startValue);\r\n\r\n    return (\r\n        <>\r\n\r\n            {\r\n                editMode\r\n                    ? <input className={style.inpDate}\r\n                             type=\"date\"\r\n                             value={dateFormat(value, \"yyyy-mm-dd\")}\r\n                             min={dateFormat(min, \"yyyy-mm-dd\")} max=\"2021-12-31\"\r\n                             autoFocus={true}\r\n                             onBlur={onDateChanged}\r\n                             onChange={onDateChanged}/>\r\n                    : <span onClick={activateEditMode}>\r\n                        {setDate}.&nbsp;</span>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DateForm;\r\n\r\n","import React, {useState} from 'react';\r\nimport style from '../App.module.css';\r\n\r\nexport const Priority = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const onPriorityChanged = (e) => {\r\n        props.changePriority(props.id, e.currentTarget.value);\r\n        deactivateEditMode();\r\n    };\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            deactivateEditMode();\r\n        }\r\n    };\r\n\r\n    let priorityTitle = \"\";\r\n\r\n    switch (props.priority) {\r\n        case 0:\r\n            priorityTitle = \"Low\";\r\n            break;\r\n        case 1:\r\n            priorityTitle = \"Middle\";\r\n            break;\r\n        case 2:\r\n            priorityTitle = \"High\";\r\n            break;\r\n        case 3:\r\n            priorityTitle = \"Urgently\";\r\n            break;\r\n        case 4:\r\n            priorityTitle = \"Later\";\r\n            break;\r\n        default:\r\n            return 1\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                editMode\r\n                    ? < select className={style.select}\r\n                               autoFocus={true}\r\n                               onKeyDown={onKeyPress}\r\n                               onChange={onPriorityChanged}\r\n                               onBlur={deactivateEditMode}\r\n                               value={props.priority}>\r\n                        <option value=\"0\">Low</option>\r\n                        <option value=\"1\">Middle</option>\r\n                        <option value=\"2\">High</option>\r\n                        <option value=\"3\">Urgently</option>\r\n                        <option value=\"4\">Later</option>\r\n                    </select>\r\n                    : <span onClick={activateEditMode}>{priorityTitle}</span>\r\n            }.&nbsp;\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Priority;\r\n\r\n","import React, {useState} from 'react';\r\nimport style from '../App.module.css';\r\nimport Input from \"antd/lib/input\";\r\n\r\n\r\nexport const TaskText = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newTitle, setNewTitle] = useState(props.title);\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.changeText(props.id, newTitle);\r\n    };\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            deactivateEditMode();\r\n        }\r\n    };\r\n\r\n    const onTitleChanged = (e) => {\r\n        setNewTitle(e.currentTarget.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                editMode\r\n                    ? <Input className={style.inp}\r\n                        onBlur={deactivateEditMode}\r\n                             onChange={onTitleChanged}\r\n                             autoFocus={true}\r\n                             value={newTitle}\r\n                             onKeyPress={onKeyPress}\r\n                             placeholder={props.placeholder}/>\r\n                    : <span onClick={activateEditMode}\r\n                            placeholder={props.placeholder}>\r\n                        {props.title ? props.title : props.placeholder}.&nbsp;</span>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TaskText;\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport const AddDateForm = (props) => {\r\n\r\n    let dateFormat = require('dateformat');\r\n    let now = new Date(props.addedDate);\r\n\r\n    return (\r\n        <>\r\n            {dateFormat(now, \"H:MM / dd-mm-yyyy\")}.&nbsp;\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default AddDateForm;\r\n\r\n","import React from 'react';\nimport style from '../App.module.css';\nimport DateForm from \"./DateForm\";\nimport Priority from \"./Priority\";\nimport TaskText from \"./TaskText\";\nimport AddDateForm from \"./AddDateForm\";\nimport Icon from \"antd/lib/icon\";\nimport Checkbox from \"antd/lib/checkbox\";\n\nexport const TodoListTask = (props) => {\n\n    const onIsDoneChanged = (e) => {\n        props.changeStatus(props.task.id, e.target.checked);\n    };\n\n    const onDeleteTask = () => {\n        props.deleteTask(props.task.id);\n    };\n\n    const classForTaskChecked = props.task.completed ? style.taskDone : '';\n\n    return (\n        <tbody >\n        <tr className={classForTaskChecked}>\n            <td style={{width: '2%'}}>\n                <Checkbox checked={props.task.completed === true} onChange={onIsDoneChanged}/>\n            </td>\n            <td style={{width: '12%'}}>\n                <AddDateForm addedDate={props.task.addedDate}/>\n            </td>\n            <td style={{width: '20%'}}>\n                <TaskText title={props.task.title}\n                          changeText={props.changeTitle}\n                          id={props.task.id}\n                          placeholder={'set title'}/>\n            </td>\n            <td style={{width: '40%'}}>\n                <TaskText\n                    title={props.task.description}\n                    changeText={props.changeDescription}\n                    id={props.task.id}\n                    placeholder={'set description'}/>\n            </td>\n            <td style={{width: '8%'}}>\n                <Priority priority={props.task.priority}\n                          changePriority={props.changePriority}\n                          id={props.task.id}/>\n            </td>\n            <td style={{width: '8%'}}>\n                <DateForm changeDate={props.changeStartDate}\n                          id={props.task.id}\n                          addedDate={props.task.addedDate}\n                          date={props.task.startDate}/>\n            </td>\n            <td style={{width: '8%'}}>\n                <DateForm changeDate={props.changeDeadline}\n                          id={props.task.id}\n                          addedDate={props.task.addedDate}\n                          date={props.task.deadline}/>\n            </td>\n            <td style={{width: '2%'}}>\n                <Icon type=\"delete\" onClick={onDeleteTask}/>\n            </td>\n        </tr>\n        </tbody>\n    );\n\n};\n\nexport default TodoListTask;\n\n","import React from 'react';\nimport style from '../App.module.css';\nimport TodoListTask from \"./TodoListTask\";\nimport {Icon} from \"antd\";\n\nconst uuidv1 = require('uuid/v1');\n\nexport const TodoListTasks = (props) => {\n    const tasksElements = props.tasks.map(task => {\n            return <TodoListTask task={task}\n                                 changeStatus={props.changeStatus}\n                                 changeTitle={props.changeTitle}\n                                 deleteTask={props.deleteTask}\n                                 changePriority={props.changePriority}\n                                 changeDescription={props.changeDescription}\n                                 changeStartDate={props.changeStartDate}\n                                 changeDeadline={props.changeDeadline}\n                                 key={uuidv1()}/>\n\n        })\n    ;\n    return (\n        <div className={style.tasks}>\n            <table>\n                <thead>\n                <tr>\n                    <th style={{width: '2%'}}><Icon type=\"check\"/></th>\n                    <th style={{width: '12%'}}>Added date</th>\n                    <th style={{width: '20%'}}>Title</th>\n                    <th style={{width: '40%'}}>Description</th>\n                    <th style={{width: '8%'}}>Priority</th>\n                    <th style={{width: '8%'}}>Start date</th>\n                    <th style={{width: '8%'}}>Deadline</th>\n                    <th style={{width: '2%'}}><Icon type=\"close\"/></th>\n                </tr>\n                </thead>\n                {tasksElements}\n            </table>\n\n        </div>\n    );\n};\n\nexport default TodoListTasks;\n\n","import React from 'react';\nimport style from '../App.module.css';\nimport Button from \"antd/lib/button\";\n\n\nexport const TodoListFilter = (props) => {\n\n    const onAllFilterClick = () => {\n        props.changeFilter(\"All\");\n    };\n    const onCompletedFilterClick = () => {\n        props.changeFilter(\"Completed\");\n    };\n    const onActiveFilterClick = () => {\n        props.changeFilter(\"Active\");\n    };\n\n    let checkForAll = props.filterValue === \"All\" ? 'check' : '';\n    let checkForCompleted = props.filterValue === \"Completed\" ? 'check' : '';\n    let checkForActive = props.filterValue === \"Active\" ? 'check' : '';\n\n    return (\n        <div className={style.buttons}>\n            <Button onClick={onAllFilterClick}\n                    type={'primary'}\n                    size={'small'}\n                    icon={checkForAll}>\n                all\n            </Button>\n            <Button onClick={onCompletedFilterClick}\n                    type={'primary'}\n                    size={'small'}\n                    icon={checkForCompleted}>\n                completed\n            </Button>\n            <Button onClick={onActiveFilterClick}\n                    type={'primary'}\n                    size={'small'}\n                    icon={checkForActive}>\n                active\n            </Button>\n        </div>\n    );\n};\n\nexport default TodoListFilter;\n\n","import React, {useState} from 'react';\nimport style from '../App.module.css'\nimport Input from \"antd/lib/input\";\nimport Icon from \"antd/lib/icon\";\n\n\nexport const TodoListTitle = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [newTitle, setNewTitle] = useState(props.title);\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.changeTodolistTitle(newTitle, props.id);\n    };\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n    const onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            deactivateEditMode();\n        }\n    };\n\n    const onTitleChanged = (e) => {\n        setNewTitle(e.currentTarget.value);\n    };\n\n    return (\n        <div className={style.todoTitle}>\n            {editMode ? \"\"\n                : <Icon type=\"delete\" onClick={props.onDelete}/>}\n            {editMode\n                ? <Input onBlur={deactivateEditMode}\n                         onChange={(e) => {\n                             onTitleChanged(e)\n                         }}\n                         autoFocus={true}\n                         value={newTitle}\n                         onKeyPress={onKeyPress}/>\n                : <span onClick={activateEditMode}\n                        style={{\n                            fontSize: '1.6em',\n                        }}>\n                    {props.title} &nbsp;</span>\n            }\n\n\n        </div>\n    );\n};\n\nexport default TodoListTitle;\n\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/todo-lists/\",\r\n    headers: {\r\n        \"API-KEY\": \"99877a27-c404-4003-9d7e-bbb983559996\"\r\n    }\r\n});\r\n\r\n\r\nexport const api = {\r\n    createTask(newTaskTitle, todolistId) {\r\n        return instance.post(`${todolistId}/tasks`, {title: newTaskTitle})\r\n    },\r\n    createTodolist(title) {\r\n        return instance.post(\"\", {title: title})\r\n    },\r\n    getTodolists() {\r\n        return instance.get(\"\")\r\n    },\r\n    updateTask(task) {\r\n        return instance.put('tasks', task)\r\n    },\r\n    deleteTodolist(id) {\r\n        return instance.delete('' + id)\r\n    },\r\n    deleteTask(id) {\r\n        return instance.delete(`tasks/ ${id}`)\r\n    },\r\n    getTasks(todolistId) {\r\n        return instance.get(`${todolistId}/tasks`)\r\n    },\r\n    updateTitleTodolist(todolistId, newTitle) {\r\n        return instance.put(`${todolistId}`, {title: newTitle})\r\n    }\r\n};\r\n\r\n","import {api} from \"../api/api\";\r\n\r\nexport const ADD_TODOLIST = \"TodoList/Reducer/ADD-TODOLIST\";\r\nexport const DELETE_TODOLIST = \"TodoList/Reducer/DELETE-TODOLIST\";\r\nexport const DELETE_TASK = \"TodoList/Reducer/DELETE-TASK\";\r\nexport const ADD_TASK = \"TodoList/Reducer/ADD-TASK\";\r\nexport const SET_TASKS = \"TodoList/Reducer/SET_TASKS\";\r\nexport const UPDATE_TASK = \"TodoList/Reducer/UPDATE-TASK\";\r\nexport const SET_TODOLISTS = \"TodoList/Reducer/SET_TODOLISTS\";\r\nexport const UPDATE_TODOLIST = \"TodoList/Reducer/UPDATE_TODOLIST\";\r\n\r\nconst initialState = {\r\n    \"todolists\": []\r\n};\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TASKS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id !== action.todolistId) {\r\n                        return tl;\r\n                    } else {\r\n                        return {...tl, tasks: action.tasks}\r\n                    }\r\n                })\r\n            };\r\n        case SET_TODOLISTS:\r\n\r\n            return {\r\n                ...state,\r\n                todolists: action.todolists.map(tl => {\r\n                    return {...tl, tasks: []}\r\n                })\r\n            };\r\n        case ADD_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: [...state.todolists, action.newTodolist]\r\n            };\r\n        case DELETE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(tl => tl.id !== action.todolistId)\r\n            };\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.filter(t => t.id !== action.taskId)\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {...tl, tasks: [...tl.tasks, action.newTask]}\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case UPDATE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.map(t => {\r\n                                if (t.id !== action.taskId) {\r\n                                    return t;\r\n                                } else {\r\n                                    return {...t, ...action.obj};\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case UPDATE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n\r\n                            ...tl, title: action.newTitle\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst updateTaskAC = (taskId, obj, todolistId) => {\r\n\r\n    return {type: UPDATE_TASK, taskId, obj, todolistId};\r\n};\r\nconst updateTodolistAC = (todolistId, newTitle) => {\r\n\r\n    return {type: UPDATE_TODOLIST, todolistId, newTitle};\r\n\r\n};\r\nconst setTasksAC = (tasks, todolistId) => {\r\n    return {type: SET_TASKS, tasks, todolistId};\r\n};\r\nconst deleteTodolistAC = (todolistId) => {\r\n    return {\r\n        type: DELETE_TODOLIST,\r\n        todolistId: todolistId\r\n    };\r\n};\r\nconst deleteTaskAC = (taskId, todolistId) => {\r\n    return {\r\n        type: DELETE_TASK,\r\n        taskId,\r\n        todolistId\r\n\r\n    };\r\n};\r\nconst addTaskAC = (newTask, todolistId) => ({type: ADD_TASK, newTask, todolistId});\r\n\r\nconst addTodolistAC = (newTodolist) => {\r\n    return {\r\n        type: ADD_TODOLIST,\r\n        newTodolist: newTodolist\r\n    }\r\n};\r\nconst setTodolistsAC = (todolists) => {\r\n    return {\r\n        type: SET_TODOLISTS,\r\n        todolists: todolists\r\n    }\r\n};\r\n\r\nexport const addTaskTC = (newText, todolistId) => {\r\n    return (dispatch) => {\r\n        api.createTask(newText, todolistId).then(res => {\r\n            let newTask = res.data.data.item;\r\n            dispatch(addTaskAC(newTask, todolistId))\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteTaskTC = (taskId, todolistId) => {\r\n    return (dispatch) => {\r\n        api.deleteTask(taskId, todolistId).then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(deleteTaskAC(taskId, todolistId))\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteTodolistTC = (todolistId) => {\r\n    return (dispatch) => {\r\n        api.deleteTodolist(todolistId).then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(deleteTodolistAC(todolistId))\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const setTodolistsTC = () => {\r\n    return (dispatch) => {\r\n        api.getTodolists().then(res => {\r\n            dispatch(setTodolistsAC(res.data))\r\n        })\r\n    }\r\n};\r\n\r\nexport const setTasksTC = (todolistId) => {\r\n    return (dispatch) => {\r\n        api.getTasks(todolistId).then(res => {\r\n            dispatch(setTasksAC(res.data.items, todolistId))\r\n        })\r\n    }\r\n};\r\n\r\nexport const updateTaskTC = (taskId, obj, todolistId) => {\r\n    return (dispatch, getState) => {\r\n        getState()\r\n            .todo.todolists.find(tl => tl.id === todolistId)\r\n            .tasks.forEach(t => {\r\n\r\n            if (t.id === taskId) {\r\n                api.updateTask({...t, ...obj}).then(() => {\r\n                    dispatch(updateTaskAC(taskId, obj, todolistId))\r\n                })\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const updateTodolistTC = (todolistId, newTitle) => {\r\n    return (dispatch, getState) => {\r\n        getState()\r\n            .todo.todolists.forEach(tl => {\r\n            if (tl.id === todolistId) {\r\n                api.updateTitleTodolist(tl.id, newTitle).then((res) => {\r\n                    if (res.data.resultCode === 0) {\r\n                        dispatch(updateTodolistAC(todolistId, newTitle))\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const addTodolistTC = (title) => {\r\n    return (dispatch) => {\r\n        api.createTodolist(title).then(res => {\r\n            dispatch(addTodolistAC(res.data.data.item))\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport default todoReducer;\r\n","import React, {useState} from 'react';\nimport style from '../App.module.css';\nimport Input from \"antd/lib/input\";\nimport {Button} from \"antd\";\n\n\nexport const AddNewItemForm = (props) => {\n\n    const [error, setError] = useState(false);\n    const [title, setNewTitle] = useState('');\n\n\n    const onAddItemClick = () => {\n        setNewTitle(title);\n        if (title === \"\") {\n\n            setError(true);\n        } else {\n            setError(false);\n            props.addItem(title);\n        }\n        setNewTitle('')\n    };\n\n    const onTitleChanged = (e) => {\n        setNewTitle(e.currentTarget.value);\n        setError(false);\n    };\n\n\n    const onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            onAddItemClick();\n        }\n    };\n\n\n\n    let inputError = error ? {backgroundColor : 'red', opacity:'0.7'} : {};\n    return (\n        <div className={style.addNewForm}>\n            <div className={style.inputAdd}>\n                <Input placeholder={props.placeholder}\n                       onChange={onTitleChanged}\n                       onKeyPress={onKeyPress}\n                       value={title}\n                       id={props.labelInput}\n                       style={inputError}/>\n            </div>\n            <div className={style.btnAdd}>\n                <Button type=\"primary\"\n                        onClick={onAddItemClick}\n                        size={'small'}>\n                    Add\n                </Button>\n\n            </div>\n        </div>\n    );\n};\n\nexport default AddNewItemForm;\n\n","import React, {useState, useEffect} from 'react';\nimport style from '../App.module.css';\nimport TodoListTasks from \"./TodoListTasks\";\nimport TodoListFilter from \"./TodoListFilter\";\nimport TodoListTitle from \"./TodoListTitle\";\nimport {connect} from \"react-redux\";\nimport {addTaskTC, deleteTaskTC, deleteTodolistTC, setTasksTC, updateTaskTC, updateTodolistTC}\n    from \"../redux/todo-reducer\";\nimport AddDateForm from \"./AddDateForm\";\nimport AddNewItemForm from \"./AddNewItemForm\";\n\n\nexport const TodoList = (props) => {\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await props.setTasksTC(props.id);\n        };\n        fetchData()\n    }, [props.id]);\n\n    const [filterValue, setNewFilterValue] = useState('All');\n\n    const addTask = (newText) => {\n        props.addTaskTC(newText, props.id);\n    };\n\n    const changeFilter = (filterValue) => {\n\n        setNewFilterValue(filterValue);\n    };\n\n    const changeTask = (taskId, obj) => {\n        props.updateTaskTC(taskId, obj, props.id);\n    };\n\n    const changeTodolistTitle = (newTitle) => {\n        props.updateTodolistTC(props.id, newTitle);\n    };\n\n    const changeStatus = (taskId, completed) => {\n        changeTask(taskId, {completed});\n    };\n\n    const changeTitle = (taskId, title) => {\n        changeTask(taskId, {title});\n    };\n    const changePriority = (taskId, priority) => {\n        changeTask(taskId, {priority: Number(priority)});\n    };\n    const changeDescription = (taskId, description) => {\n        changeTask(taskId, {description});\n    };\n\n    const changeStartDate = (taskId, startDate) => {\n        changeTask(taskId, {startDate});\n    };\n    const changeDeadline = (taskId, deadline) => {\n        changeTask(taskId, {deadline});\n    };\n\n    const deleteTodolist = () => {\n        props.deleteTodolistTC(props.id);\n    };\n\n    const deleteTask = (taskId) => {\n        props.deleteTaskTC(taskId, props.id);\n    };\n\n    const {tasks = []} = props;\n\n    return (\n        <div className={style.todoList}>\n            <div className={style.todoListHeader}>\n                <TodoListTitle title={props.title}\n                               onDelete={deleteTodolist}\n                               changeTodolistTitle={changeTodolistTitle}\n                               id={props.id}/>\n                <AddNewItemForm addItem={addTask}\n                                placeholder={'Add new task'}\n                                labelInput={props.id}/>\n                <TodoListFilter changeFilter={changeFilter} filterValue={filterValue}/>\n                <AddDateForm addedDate={props.addedDate}/>\n            </div>\n\n\n            <TodoListTasks changeStatus={changeStatus}\n                           changeTitle={changeTitle}\n                           deleteTask={deleteTask}\n                           changePriority={changePriority}\n                           changeDescription={changeDescription}\n                           changeStartDate={changeStartDate}\n                           changeDeadline={changeDeadline}\n                           tasks={tasks.filter(t => {\n                               if (filterValue === \"All\") {\n                                   return true;\n                               }\n                               if (filterValue === \"Active\") {\n                                   return t.completed === false;\n                               }\n                               if (filterValue === \"Completed\") {\n                                   return t.completed === true;\n                               }\n                           })}/>\n\n        </div>\n    );\n};\n\nconst ConnectedTodoList = connect(null, {\n    deleteTaskTC, deleteTodolistTC, updateTaskTC,\n    setTasksTC, addTaskTC, updateTodolistTC\n})(TodoList);\n\nexport default ConnectedTodoList;\n\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"99877a27-c404-4003-9d7e-bbb983559996\"\r\n    }\r\n});\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password) {\r\n        return instance.post(`auth/login`, {email, password});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\n\r\n","import {authAPI} from \"../api/authApi\";\r\n\r\n\r\nconst SET_USER_DATA = '/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = '/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    }\r\n};\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React, {useEffect} from 'react';\r\nimport style from '../App.module.css';\r\nimport TodoList from \"./TodoList\";\r\nimport AddNewItemForm from \"./AddNewItemForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {addTodolistTC, setTodolistsTC} from \"../redux/todo-reducer\";\r\nimport {getAuthUserData, logout} from \"../redux/auth-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {Icon} from \"antd\";\r\nimport 'antd/dist/antd.css'\r\n\r\nexport const TodolistAPP = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.setTodolistsTC();\r\n    }, []);\r\n\r\n    const addTodoList = (title) => {\r\n        props.addTodolistTC(title);\r\n    };\r\n\r\n    const todolists = props\r\n        .todolists\r\n        .map(tl => <TodoList\r\n            key={tl.id}\r\n            id={tl.id}\r\n            title={tl.title}\r\n            tasks={tl.tasks}\r\n            addedDate={tl.addedDate}/>);\r\n\r\n    return (\r\n        <>\r\n            <div className={style.header}>\r\n                <div className={style.form}>\r\n                    <AddNewItemForm addItem={addTodoList}\r\n                                    placeholder={'Add new to do list'}\r\n                                    labelInput={\"labelInput\"}/>\r\n                </div>\r\n                <div className={style.logout}>\r\n                    {props.isAuth\r\n\r\n                        ? <Icon type=\"logout\"\r\n                                style={{\r\n                                    color: '#1890ff',\r\n                                    fontSize: '24px'\r\n                                }}\r\n                                onClick={() => props.logout()}/>\r\n                        : <Redirect to={'/login'}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={style.App}>\r\n                {todolists}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todolists: state.todo.todolists,\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth,\r\n        userId: state.auth.userId,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        addTodolistTC,\r\n        setTodolistsTC,\r\n        getAuthUserData,\r\n        logout\r\n    }),\r\n    withRouter,\r\n)(TodolistAPP);","import React from 'react'\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Field} from \"redux-form\";\r\nimport s from '../App.module.css'\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <div className={s.formRedux}>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <label>Email</label>\r\n                <Field name=\"email\" component=\"input\" type=\"text\"/>\r\n                <label>Password</label>\r\n                <Field name=\"password\" component=\"input\" type=\"Password\"/>\r\n                <button>Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\nexport default LoginReduxForm","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, login} from \"../redux/auth-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport s from '../App.module.css'\r\nimport {compose} from \"redux\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nconst Login = (props) => {\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await props.getAuthUserData();\r\n        };\r\n        fetchData();\r\n    }, [props]);\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/todolist\"}/>\r\n    }\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <span>Credentials for testing</span>\r\n            <span>Email: <b>p.milenkii@gmail.com</b></span>\r\n            <span>Password: <b>test</b></span>\r\n            <LoginForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {login, getAuthUserData}),\r\n    withRouter,\r\n)(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = '/app/INITIALIZED_SUCCESS';\r\n\r\nconst initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS,});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    const promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","import React from 'react';\nimport TodolistAPP from \"./components/TodolistAPP\";\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\n\nexport const App = () => {\n\n    return (\n        <div>\n            <Switch>\n                <Route exact path='/' render={() => <Redirect to={'/todolist'}/>}/>\n                <Route path='/todolist' render={() => <TodolistAPP/>}/>\n                <Route path='/login' render={() => <Login/>}/>\n                <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\n            </Switch>\n        </div>\n\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nexport default AppContainer\n\n\n","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\nimport todoReducer from \"./todo-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    todo:todoReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3MRyD\",\"header\":\"App_header__Z2y3y\",\"form\":\"App_form__1me3d\",\"logout\":\"App_logout__2e433\",\"addNewForm\":\"App_addNewForm__3G4c6\",\"inputAdd\":\"App_inputAdd__13ie1\",\"btnAdd\":\"App_btnAdd__13dPO\",\"todoList\":\"App_todoList__M3Wvs\",\"todoListHeader\":\"App_todoListHeader__3a0wV\",\"todoTitle\":\"App_todoTitle__1_EN0\",\"isHow\":\"App_isHow__1HIzZ\",\"buttons\":\"App_buttons__kAKS3\",\"taskDone\":\"App_taskDone__2ZQ0k\",\"icon\":\"App_icon__2AK1q\",\"wrapper\":\"App_wrapper__1aqkU\",\"inp\":\"App_inp__fhski\",\"inpDate\":\"App_inpDate__2BKuX\",\"select\":\"App_select__dxyBg\",\"formRedux\":\"App_formRedux__20fPj\",\"addedDate\":\"App_addedDate__3epeI\"};"],"sourceRoot":""}