{"version":3,"sources":["styles/TodoListFilter.module.css","App.module.css","styles/TodoListTitle.module.css","styles/AddNewItemForm.module.css","styles/TodoList.module.css","styles/TodoListTask.module.css","components/DateForm.js","components/Priority.js","components/TaskText.js","components/AddDateForm.js","components/TodoListTask.js","components/TodoListTasks.js","components/TodoListFilter.js","components/TodoListTitle.js","api/api.js","redux/reducer.js","components/AddNewItemForm.js","components/TodoList.js","App.js","redux/store.js","index.js"],"names":["module","exports","todoListFilter","isHow","App","header","title","tasks","container","todoListTitle","newForm","containerBtn","error","todoList","todoListHeader","task","taskDone","heading","wrapper","textContainer","inp","inpDate","select","DateForm","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","onDateChanged","e","changeDate","id","currentTarget","value","dateFormat","require","now","Date","date","setDate","concat","startValue","addedDate","min","react_default","a","createElement","className","style","type","max","autoFocus","onBlur","onChange","onClick","Priority","deactivateEditMode","priorityTitle","priority","onKeyDown","key","changePriority","selected","TaskText","_useState3","_useState4","newTitle","setNewTitle","changeText","taskTitle","onKeyPress","placeholder","AddDateForm","TodoListTask","containerCssClass","completed","IconButton","aria-label","deleteTask","Delete_default","color","Checkbox","checked","changeStatus","inputProps","components_TaskText","changeTitle","description","changeDescription","components_Priority","components_AddDateForm","components_DateForm","changeStartDate","startDate","changeDeadline","deadline","TodoListTasks","tasksElements","map","components_TodoListTask","TodoListFilter","isHidden","setHiddenMode","classForAll","filterValue","filterActive","classForCompleted","classForActive","buttons","Button","changeFilter","TodoListTitle","changeTodolistTitle","onTitleChanged","input","onDelete","instance","axios","create","withCredentials","baseURL","headers","API-KEY","api","newTaskTitle","todolistId","post","get","put","delete","ADD_TASK","initialState","todolists","reducer","state","arguments","length","undefined","action","_objectSpread","tl","toConsumableArray","newTodolist","filter","t","taskId","newTask","obj","AddNewItemForm","setError","onAddItemClick","addItem","classNameForInput","htmlFor","Fab","size","Add_default","ConnectedTodoList","connect","deleteTaskTC","dispatch","then","res","data","resultCode","deleteTaskAC","deleteTodolistTC","deleteTodolistAC","updateTaskTC","getState","find","forEach","updateTaskAC","setTasksTC","setTasksAC","items","addTaskTC","newText","item","addTaskAC","updateTodolistTC","updateTodolistAC","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","this","fetchData","setNewFilterValue","changeTask","_props$tasks","components_TodoListTitle","components_AddNewItemForm","components_TodoListFilter","components_TodoListTasks","Number","ConnectedApp","addTodolistTC","setTodolistsTC","components_TodoList","Fragment","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e5842a52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListFilter\":\"TodoListFilter_todoListFilter__EuTw9\",\"isHow\":\"TodoListFilter_isHow__12RUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3MRyD\",\"header\":\"App_header__Z2y3y\",\"title\":\"App_title__3Ci0S\",\"tasks\":\"App_tasks__3YtUf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TodoListTitle_container__3RfeJ\",\"title\":\"TodoListTitle_title__3V35V\",\"todoListTitle\":\"TodoListTitle_todoListTitle__1flMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddNewItemForm_container__2V52p\",\"newForm\":\"AddNewItemForm_newForm__2cF6S\",\"containerBtn\":\"AddNewItemForm_containerBtn__tVAur\",\"error\":\"AddNewItemForm_error__2isHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TodoList_todoList__3a1Ok\",\"todoListHeader\":\"TodoList_todoListHeader__10Ja4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TodoListTask_task__3sK6e\",\"taskDone\":\"TodoListTask_taskDone__2NpFM\",\"heading\":\"TodoListTask_heading__1h1Sf\",\"wrapper\":\"TodoListTask_wrapper__2uJL6\",\"textContainer\":\"TodoListTask_textContainer__rY4CA\",\"inp\":\"TodoListTask_inp__jEYiF\",\"inpDate\":\"TodoListTask_inpDate__3tST2\",\"select\":\"TodoListTask_select__3Ovb_\"};","import React, {useState} from 'react';\r\nimport style from '../styles/TodoListTask.module.css';\r\n\r\n\r\nexport const DateForm = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const onDateChanged = (e) => {\r\n        setEditMode(false);\r\n        props.changeDate(props.id, e.currentTarget.value);\r\n    };\r\n\r\n    let dateFormat = require('dateformat');\r\n\r\n    let now = new Date(props.date);\r\n\r\n    let setDate = props.date\r\n        ? dateFormat(now, \"dd-mm-yyyy\")\r\n        : `set ${props.title}`;\r\n\r\n    let startValue = props.date\r\n        ? props.date\r\n        : props.addedDate;\r\n\r\n    let min = new Date(props.addedDate);\r\n    let value = new Date(startValue);\r\n\r\n    return (\r\n        <div className={style.textContainer}>\r\n            <span className={style.heading}>{props.title}:&nbsp;</span>\r\n            {\r\n                editMode\r\n                    ? <input className={style.inpDate}\r\n                             type=\"date\"\r\n                             value={dateFormat(value, \"yyyy-mm-dd\")}\r\n                             min={dateFormat(min, \"yyyy-mm-dd\")} max=\"2021-12-31\"\r\n                             autoFocus={true}\r\n                             onBlur={onDateChanged}\r\n                             onChange={onDateChanged}/>\r\n                    : <span onClick={activateEditMode}>\r\n                        {setDate}.&nbsp;</span>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DateForm;\r\n\r\n","import React, {useState} from 'react';\r\nimport style from '../styles/TodoListTask.module.css';\r\n\r\nexport const Priority = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const onPriorityChanged = (e) => {\r\n        props.changePriority(props.id, e.currentTarget.value);\r\n        deactivateEditMode();\r\n    };\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            deactivateEditMode();\r\n        }\r\n    };\r\n\r\n    let priorityTitle = \"\";\r\n\r\n    switch (props.priority) {\r\n        case 0:\r\n            priorityTitle = \"Low\";\r\n            break;\r\n        case 1:\r\n            priorityTitle = \"Middle\";\r\n            break;\r\n        case 2:\r\n            priorityTitle = \"High\";\r\n            break;\r\n        case 3:\r\n            priorityTitle = \"Urgently\";\r\n            break;\r\n        case 4:\r\n            priorityTitle = \"Later\";\r\n            break;\r\n    }\r\n\r\n    let select = props.priority;\r\n    return (\r\n        <div className={style.textContainer}>\r\n            <span className={style.heading}>Priority: </span>\r\n            {\r\n                editMode\r\n                    ? <select className={style.select}\r\n                        autoFocus={true}\r\n                              onKeyDown={onKeyPress}\r\n                              onChange={onPriorityChanged}\r\n                              onBlur={deactivateEditMode}>\r\n                        <option selected={select === 0} value=\"0\">Low</option>\r\n                        <option selected={select === 1} value=\"1\">Middle</option>\r\n                        <option selected={select === 2} value=\"2\">High</option>\r\n                        <option selected={select === 3} value=\"3\">Urgently</option>\r\n                        <option selected={select === 4} value=\"4\">Later</option>\r\n                    </select>\r\n                    : <span onClick={activateEditMode}>{priorityTitle}</span>\r\n            }.&nbsp;\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Priority;\r\n\r\n","import React, {useState} from 'react';\r\nimport style from '../styles/TodoListTask.module.css';\r\n\r\n\r\nexport const TaskText = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newTitle, setNewTitle] = useState(props.title);\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.changeText(props.id, newTitle);\r\n    };\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            deactivateEditMode();\r\n        }\r\n    };\r\n\r\n    const onTitleChanged = (e) => {\r\n        setNewTitle(e.currentTarget.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={style.textContainer}>\r\n            <span className={style.heading}>{props.taskTitle}:&nbsp;</span>\r\n            {\r\n                editMode\r\n                    ? <input className={style.inp}\r\n                        onBlur={deactivateEditMode}\r\n                             onChange={onTitleChanged}\r\n                             autoFocus={true}\r\n                             value={newTitle}\r\n                             onKeyPress={onKeyPress}\r\n                             placeholder={props.placeholder}/>\r\n                    : <span onClick={activateEditMode}\r\n                            placeholder={props.placeholder}>\r\n                        {props.title ? props.title : props.placeholder}.&nbsp;</span>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskText;\r\n\r\n","import React from 'react';\r\nimport style from '../styles/TodoListTask.module.css';\r\n\r\nexport const AddDateForm = (props) => {\r\n\r\n    let dateFormat = require('dateformat');\r\n    let now = new Date(props.addedDate);\r\n\r\n    return (\r\n        <div className={style.textContainer}>\r\n                <span className={style.heading}>\r\n                    Added date:&nbsp;\r\n                </span>{dateFormat(now, \"H:MM dd-mm-yyyy\")}.&nbsp;\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default AddDateForm;\r\n\r\n","import React from 'react';\nimport style from '../styles/TodoListTask.module.css';\nimport DateForm from \"./DateForm\";\nimport Priority from \"./Priority\";\nimport TaskText from \"./TaskText\";\nimport AddDateForm from \"./AddDateForm\";\nimport {IconButton} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nexport const TodoListTask = (props) => {\n\n    const onIsDoneChanged = (e) => {\n        props.changeStatus(props.task.id, e.currentTarget.checked);\n    };\n\n    const onDeleteTask = () => {\n        props.deleteTask(props.task.id);\n    };\n\n    const containerCssClass = props.task.completed ? style.taskDone : style.task;\n\n    return (\n        <div className={containerCssClass}>\n            <div>\n                <IconButton aria-label=\"delete\" onClick={onDeleteTask}>\n                    <DeleteIcon color=\"primary\"/>\n                </IconButton>\n                <Checkbox\n                    checked={props.task.completed === true}\n                    onChange={onIsDoneChanged}\n                    value=\"checkedB\"\n                    color=\"primary\"\n                    inputProps={{'aria-label': 'secondary checkbox',}}/>\n            </div>\n            <TaskText taskTitle={'Title'}\n                      title={props.task.title}\n                      changeText={props.changeTitle}\n                      id={props.task.id}\n                      placeholder={'set title'}/>\n            <TaskText taskTitle={'Description'}\n                      title={props.task.description}\n                      changeText={props.changeDescription}\n                      id={props.task.id}\n                      placeholder={'set description'}/>\n            <Priority priority={props.task.priority}\n                      changePriority={props.changePriority}\n                      id={props.task.id}/>\n\n            <AddDateForm addedDate={props.task.addedDate}/>\n\n            <DateForm changeDate={props.changeStartDate}\n                      id={props.task.id}\n                      addedDate={props.task.addedDate}\n                      date={props.task.startDate}\n                      title={'start date'}/>\n            <DateForm changeDate={props.changeDeadline}\n                      id={props.task.id}\n                      addedDate={props.task.addedDate}\n                      date={props.task.deadline}\n                      title={'deadline'}/>\n        </div>\n    );\n\n};\n\nexport default TodoListTask;\n\n","import React from 'react';\nimport style from '../App.module.css';\nimport TodoListTask from \"./TodoListTask\";\n\nexport const TodoListTasks = (props) => {\n    const tasksElements = props.tasks.map(task => {\n            return <TodoListTask task={task}\n                                 changeStatus={props.changeStatus}\n                                 changeTitle={props.changeTitle}\n                                 deleteTask={props.deleteTask}\n                                 changePriority={props.changePriority}\n                                 changeDescription={props.changeDescription}\n                                 changeStartDate={props.changeStartDate}\n                                 changeDeadline={props.changeDeadline}\n                                 key={props.tasks.id}/>\n\n        })\n    ;\n    return (\n        <div className={style.tasks}>\n            {tasksElements}\n        </div>\n    );\n};\n\nexport default TodoListTasks;\n\n","import React, {useState} from 'react';\nimport style from '../styles/TodoListFilter.module.css';\nimport Button from \"@material-ui/core/Button\";\n\n\nexport const TodoListFilter = (props) => {\n\n    const [isHidden, setHiddenMode] = useState(false);\n\n    const onAllFilterClick = () => {\n        props.changeFilter(\"All\");\n    };\n    const onCompletedFilterClick = () => {\n        props.changeFilter(\"Completed\");\n    };\n    const onActiveFilterClick = () => {\n        props.changeFilter(\"Active\");\n    };\n    const onShowFiltersClick = () => {\n        setHiddenMode(true);\n    };\n    const onHideFiltersClick = () => {\n        setHiddenMode(false);\n    };\n\n    let classForAll = props.filterValue === \"All\" ? style.filterActive : \"\";\n    let classForCompleted = props.filterValue === \"Completed\" ? style.filterActive : \"\";\n    let classForActive = props.filterValue === \"Active\" ? style.filterActive : \"\";\n\n    return (\n        <div className={style.todoListFilter}>\n            <div className={style.isHow}>\n                {!isHidden && <span onClick={onShowFiltersClick}>hide filter</span>}\n                {isHidden && <span onClick={onHideFiltersClick}>show filter</span>}\n            </div>\n            {\n                !isHidden && <div className={style.buttons}>\n                    <Button color=\"primary\"\n                            onClick={onAllFilterClick}\n                            className={classForAll}>All</Button>\n                    <Button color=\"primary\"\n                            onClick={onCompletedFilterClick}\n                            className={classForCompleted}>Completed</Button>\n                    <Button  color=\"primary\"\n                             onClick={onActiveFilterClick}\n                             className={classForActive}>Active</Button>\n                </div>\n            }\n\n        </div>\n    );\n};\n\nexport default TodoListFilter;\n\n","import React, {useState} from 'react';\nimport style from '../styles/TodoListTitle.module.css';\nimport {IconButton} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nexport const TodoListTitle = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [newTitle, setNewTitle] = useState(props.title);\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.changeTodolistTitle(newTitle, props.id);\n    };\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n    const onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            deactivateEditMode();\n        }\n    };\n\n    const onTitleChanged = (e) => {\n        setNewTitle(e.currentTarget.value);\n    };\n\n    return (\n        <div className={style.container}>\n            <div className={style.todoListTitle}>\n                {editMode\n                    ? <input onBlur={deactivateEditMode}\n                             onChange={(e) => {\n                                 onTitleChanged(e)\n                             }}\n                             autoFocus={true}\n                             value={newTitle}\n                             onKeyPress={onKeyPress}\n                             className={style.input}/>\n                    : <span onClick={activateEditMode}\n                            className={style.title}>\n                    {props.title} &nbsp;\n            </span>}\n            </div>\n            <div>\n                <IconButton aria-label=\"delete\" onClick={props.onDelete}>\n                    <DeleteIcon color=\"primary\"/>\n                </IconButton>\n            </div>\n        </div>\n    );\n};\n\nexport default TodoListTitle;\n\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/todo-lists/\",\r\n    headers: {\r\n        \"API-KEY\": \"99877a27-c404-4003-9d7e-bbb983559996\"\r\n    }\r\n});\r\n\r\n\r\nexport const api = {\r\n    createTask(newTaskTitle, todolistId) {\r\n        return instance.post(`${todolistId}/tasks`, {title: newTaskTitle})\r\n    },\r\n    createTodolist(title) {\r\n        return instance.post(\"\", {title: title})\r\n    },\r\n    getTodolists() {\r\n        return instance.get(\"\")\r\n    },\r\n    updateTask(task) {\r\n        return instance.put('tasks', task)\r\n    },\r\n    deleteTodolist(id) {\r\n        return instance.delete('' + id)\r\n    },\r\n    deleteTask(id) {\r\n        return instance.delete(`tasks/ ${id}`)\r\n    },\r\n    getTasks(todolistId) {\r\n        return instance.get(`${todolistId}/tasks`)\r\n    },\r\n    updateTitleTodolist(todolistId, newTitle) {\r\n        return instance.put(`${todolistId}`, {title: newTitle})\r\n    }\r\n};\r\n","import {api} from \"../api/api\";\r\n\r\nexport const ADD_TODOLIST = \"TodoList/Reducer/ADD-TODOLIST\";\r\nexport const DELETE_TODOLIST = \"TodoList/Reducer/DELETE-TODOLIST\";\r\nexport const DELETE_TASK = \"TodoList/Reducer/DELETE-TASK\";\r\nexport const ADD_TASK = \"TodoList/Reducer/ADD-TASK\";\r\nexport const SET_TASKS = \"TodoList/Reducer/SET_TASKS\";\r\nexport const UPDATE_TASK = \"TodoList/Reducer/UPDATE-TASK\";\r\nexport const SET_TODOLISTS = \"TodoList/Reducer/SET_TODOLISTS\";\r\nexport const UPDATE_TODOLIST = \"TodoList/Reducer/UPDATE_TODOLIST\";\r\n\r\nconst initialState = {\r\n    \"todolists\": []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TASKS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id !== action.todolistId) {\r\n                        return tl;\r\n                    } else {\r\n                        return {...tl, tasks: action.tasks}\r\n                    }\r\n                })\r\n            };\r\n        case SET_TODOLISTS:\r\n\r\n            return {\r\n                ...state,\r\n                todolists: action.todolists.map(tl => {\r\n                    return {...tl, tasks: [] }\r\n                })\r\n            };\r\n        case ADD_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: [...state.todolists, action.newTodolist]\r\n            };\r\n        case DELETE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(tl => tl.id !== action.todolistId)\r\n            };\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.filter(t => t.id !== action.taskId)\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {...tl, tasks: [...tl.tasks, action.newTask]}\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case UPDATE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.map(t => {\r\n                                if (t.id !== action.taskId) {\r\n                                    return t;\r\n                                } else {\r\n                                    return {...t, ...action.obj};\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case UPDATE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n\r\n                            ...tl, title: action.newTitle\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            }\r\n    }\r\n    return state;\r\n};\r\n\r\nconst updateTaskAC = (taskId, obj, todolistId) => {\r\n\r\n    return {type: UPDATE_TASK, taskId, obj, todolistId};\r\n};\r\nconst updateTodolistAC = (todolistId, newTitle) => {\r\n\r\n    return {type: UPDATE_TODOLIST, todolistId, newTitle};\r\n\r\n};\r\nconst setTasksAC = (tasks, todolistId) => {\r\n    return {type: SET_TASKS, tasks, todolistId};\r\n};\r\nconst deleteTodolistAC = (todolistId) => {\r\n    return {\r\n        type: DELETE_TODOLIST,\r\n        todolistId: todolistId\r\n    };\r\n};\r\nconst deleteTaskAC = (taskId, todolistId) => {\r\n    return {\r\n        type: DELETE_TASK,\r\n        taskId,\r\n        todolistId\r\n\r\n    };\r\n};\r\nconst addTaskAC = (newTask, todolistId) => ({type: ADD_TASK, newTask, todolistId});\r\n\r\nconst addTodolistAC = (newTodolist) => {\r\n    return {\r\n        type: ADD_TODOLIST,\r\n        newTodolist: newTodolist\r\n    }\r\n};\r\nconst setTodolistsAC = (todolists) => {\r\n    return {\r\n        type: SET_TODOLISTS,\r\n        todolists: todolists\r\n    }\r\n};\r\n\r\nexport const addTaskTC = (newText, todolistId) => {\r\n    return (dispatch) => {\r\n        api.createTask(newText, todolistId).then(res => {\r\n            let newTask = res.data.data.item;\r\n            dispatch(addTaskAC(newTask, todolistId))\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteTaskTC = (taskId, todolistId) => {\r\n    return (dispatch) => {\r\n        api.deleteTask(taskId, todolistId).then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(deleteTaskAC(taskId, todolistId))\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteTodolistTC = (todolistId) => {\r\n    return (dispatch) => {\r\n        api.deleteTodolist(todolistId).then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(deleteTodolistAC(todolistId))\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const setTodolistsTC = () => {\r\n    return (dispatch) => {\r\n        api.getTodolists().then(res => {\r\n            dispatch(setTodolistsAC(res.data))\r\n        })\r\n    }\r\n};\r\n\r\nexport const setTasksTC = (todolistId) => {\r\n    return (dispatch) => {\r\n        api.getTasks(todolistId).then(res => {\r\n            dispatch(setTasksAC(res.data.items, todolistId))\r\n        })\r\n    }\r\n};\r\n\r\nexport const updateTaskTC = (taskId, obj, todolistId) => {\r\n    return (dispatch, getState) => {\r\n        getState()\r\n            .todolists.find(tl => tl.id === todolistId)\r\n            .tasks.forEach(t => {\r\n\r\n            if (t.id === taskId) {\r\n                api.updateTask({...t, ...obj}).then(() => {\r\n                    dispatch(updateTaskAC(taskId, obj, todolistId))\r\n                })\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const updateTodolistTC = (todolistId, newTitle) => {\r\n    return (dispatch, getState) => {\r\n        getState()\r\n            .todolists.forEach(tl => {\r\n            if (tl.id === todolistId) {\r\n                api.updateTitleTodolist(tl.id, newTitle).then((res) => {\r\n                                        if (res.data.resultCode === 0) {\r\n                        dispatch(updateTodolistAC(todolistId, newTitle))\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const addTodolistTC = (title) => {\r\n    return (dispatch) => {\r\n        api.createTodolist(title).then(res => {\r\n            dispatch(addTodolistAC(res.data.data.item))\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport default reducer;\r\n","import React, {useState} from 'react';\nimport style from '../styles/AddNewItemForm.module.css';\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from '@material-ui/icons/Add'\n\n\nexport const AddNewItemForm = (props) => {\n\n    const [error, setError] = useState(false);\n    const [title, setNewTitle] = useState('');\n\n\n    const onAddItemClick = () => {\n        setNewTitle(title);\n        if (title === \"\") {\n            debugger\n            setError(true);\n        } else {\n            setError(false);\n            props.addItem(title);\n        }\n        setNewTitle('')\n    };\n\n    const onTitleChanged = (e) => {\n        setNewTitle(e.currentTarget.value);\n        setError(false);\n    };\n\n\n    const onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            onAddItemClick();\n        }\n    };\n\n    let classNameForInput = error ? style.error : \"\";\n    return (\n        <div className={style.container}>\n            <div className={style.newForm}>\n                <input className={classNameForInput}\n                       type=\"text\"\n                       onChange={onTitleChanged}\n                       onKeyPress={onKeyPress}\n                       value={title}\n                       id={\"labelInput\"}/>\n                <label htmlFor={\"labelInput\"}>{props.placeholder}</label>\n            </div>\n            <div className={style.containerBtn}>\n                <Fab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={onAddItemClick}>\n                    <AddIcon/>\n                </Fab>\n            </div>\n\n        </div>\n    );\n};\n\nexport default AddNewItemForm;\n\n","import React, {useState, useEffect} from 'react';\nimport style from '../styles/TodoList.module.css';\nimport TodoListTasks from \"./TodoListTasks\";\nimport TodoListFilter from \"./TodoListFilter\";\nimport TodoListTitle from \"./TodoListTitle\";\nimport {connect} from \"react-redux\";\nimport {addTaskTC, deleteTaskTC, deleteTodolistTC, setTasksTC, updateTaskTC, updateTodolistTC}\n    from \"../redux/reducer\";\nimport AddDateForm from \"./AddDateForm\";\nimport AddNewItemForm from \"./AddNewItemForm\";\n\n\nexport const TodoList = (props) => {\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await props.setTasksTC(props.id);\n        };\n        fetchData()\n    }, [props.id]);\n\n    const [filterValue, setNewFilterValue] = useState('All');\n\n    const addTask = (newText) => {\n        props.addTaskTC(newText, props.id);\n    };\n\n    const changeFilter = (filterValue) => {\n\n        setNewFilterValue(filterValue);\n    };\n\n    const changeTask = (taskId, obj) => {\n        props.updateTaskTC(taskId, obj, props.id);\n    };\n\n    const changeTodolistTitle = (newTitle) => {\n        props.updateTodolistTC(props.id, newTitle);\n    };\n\n    const changeStatus = (taskId, completed) => {\n        changeTask(taskId, {completed});\n    };\n\n    const changeTitle = (taskId, title) => {\n        changeTask(taskId, {title});\n    };\n    const changePriority = (taskId, priority) => {\n        changeTask(taskId, {priority: Number(priority)});\n    };\n    const changeDescription = (taskId, description) => {\n        changeTask(taskId, {description});\n    };\n\n    const changeStartDate = (taskId, startDate) => {\n        changeTask(taskId, {startDate});\n    };\n    const changeDeadline = (taskId, deadline) => {\n        changeTask(taskId, {deadline});\n    };\n\n    const deleteTodolist = () => {\n        props.deleteTodolistTC(props.id);\n    };\n\n    const deleteTask = (taskId) => {\n        props.deleteTaskTC(taskId, props.id);\n    };\n\n    const {tasks = []} = props;\n\n    return (\n        <div className={style.todoList}>\n            <div className={style.todoListHeader}>\n                <TodoListTitle title={props.title}\n                               onDelete={deleteTodolist}\n                               changeTodolistTitle={changeTodolistTitle}\n                               id={props.id}/>\n                <AddNewItemForm addItem={addTask}\n                                placeholder={'Add new task'}/>\n                <AddDateForm addedDate={props.addedDate}/>\n            </div>\n            <TodoListFilter changeFilter={changeFilter} filterValue={filterValue}/>\n            <TodoListTasks changeStatus={changeStatus}\n                           changeTitle={changeTitle}\n                           deleteTask={deleteTask}\n                           changePriority={changePriority}\n                           changeDescription={changeDescription}\n                           changeStartDate={changeStartDate}\n                           changeDeadline={changeDeadline}\n                           tasks={tasks.filter(t => {\n                               if (filterValue === \"All\") {\n                                   return true;\n                               }\n                               if (filterValue === \"Active\") {\n                                   return t.completed === false;\n                               }\n                               if (filterValue === \"Completed\") {\n                                   return t.completed === true;\n                               }\n                           })}/>\n\n        </div>\n    );\n};\n\nconst ConnectedTodoList = connect(null, {\n    deleteTaskTC, deleteTodolistTC, updateTaskTC,\n    setTasksTC, addTaskTC, updateTodolistTC\n})(TodoList);\n\nexport default ConnectedTodoList;\n\n","import React, {useEffect} from 'react';\nimport style from './App.module.css';\nimport TodoList from \"./components/TodoList\";\nimport AddNewItemForm from \"./components/AddNewItemForm\";\nimport {connect} from \"react-redux\";\nimport {addTodolistTC, setTodolistsTC} from \"./redux/reducer\";\n\nexport const App = (props) => {\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await props.setTodolistsTC();\n        };\n        fetchData();\n    }, []);\n\n    const addTodoList = (title) => {\n        props.addTodolistTC(title);\n    };\n\n    const todolists = props\n        .todolists\n        .map(tl => <TodoList\n            key={tl.id}\n            id={tl.id}\n            title={tl.title}\n            tasks={tl.tasks}\n            addedDate={tl.addedDate}/>);\n    return (\n        <>\n            <div className={style.header}>\n                <div>\n                    <AddNewItemForm addItem={addTodoList}\n                                    placeholder={'Add new to do list'}/>\n                </div>\n                <div>\n                    <span className={style.title}>to do list app</span>\n                </div>\n            </div>\n            <div className={style.App}>\n                {todolists}\n            </div>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        todolists: state.todolists\n    }\n};\n\nconst ConnectedApp = connect(mapStateToProps, {addTodolistTC, setTodolistsTC})(App);\nexport default ConnectedApp;\n\n","import {createStore, applyMiddleware} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport reducer from \"./reducer\";\r\n\r\n\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}