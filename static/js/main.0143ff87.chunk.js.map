{"version":3,"sources":["styles/TodoListTask.module.css","components/Login/Login.module.css","components/DateForm.js","components/Priority.js","components/TaskText.js","components/AddDateForm.js","components/TodoListTask.js","components/TodoListTasks.js","components/TodoListFilter.js","components/TodoListTitle.js","api/api.js","redux/todo-reducer.js","components/AddNewItemForm.js","components/TodoList.js","api/authApi.js","redux/auth-reducer.js","components/TodolistAPP.js","components/Login/FormsControls/FormsControls.js","components/Login/utils/validator.js","components/Login/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","redux/store.js","index.js","App.module.css","components/Login/FormsControls/FormsControls.module.css","styles/TodoListFilter.module.css","styles/TodoListTitle.module.css","styles/AddNewItemForm.module.css","styles/TodoList.module.css"],"names":["module","exports","task","taskDone","heading","wrapper","textContainer","inp","inpDate","select","DateForm","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","onDateChanged","e","changeDate","id","currentTarget","value","dateFormat","require","now","Date","date","setDate","concat","title","startValue","addedDate","min","react_default","a","createElement","className","style","type","max","autoFocus","onBlur","onChange","onClick","Priority","deactivateEditMode","priorityTitle","priority","onKeyDown","key","changePriority","selected","TaskText","_useState3","_useState4","newTitle","setNewTitle","changeText","taskTitle","onKeyPress","placeholder","AddDateForm","TodoListTask","containerCssClass","completed","IconButton","aria-label","deleteTask","Delete_default","color","Checkbox","checked","changeStatus","inputProps","components_TaskText","changeTitle","description","changeDescription","components_Priority","components_AddDateForm","components_DateForm","changeStartDate","startDate","changeDeadline","deadline","TodoListTasks","tasksElements","tasks","map","components_TodoListTask","TodoListFilter","isHidden","setHiddenMode","classForAll","filterValue","filterActive","classForCompleted","classForActive","todoListFilter","isHow","buttons","Button","changeFilter","TodoListTitle","changeTodolistTitle","container","todoListTitle","onTitleChanged","input","onDelete","instance","axios","create","withCredentials","baseURL","headers","API-KEY","api","newTaskTitle","todolistId","post","get","put","delete","ADD_TASK","initialState","todolists","todoReducer","state","arguments","length","undefined","action","objectSpread2","tl","toConsumableArray","newTodolist","filter","t","taskId","newTask","obj","AddNewItemForm","error","setError","onAddItemClick","addItem","classNameForInput","newForm","labelInput","htmlFor","containerBtn","Fab","size","Add_default","ConnectedTodoList","connect","deleteTaskTC","dispatch","then","res","data","resultCode","deleteTaskAC","deleteTodolistTC","deleteTodolistAC","updateTaskTC","getState","todo","find","forEach","updateTaskAC","setTasksTC","setTasksAC","items","addTaskTC","newText","item","addTaskAC","updateTodolistTC","updateTodolistAC","useEffect","regenerator_default","async","_context","prev","next","awrap","stop","setNewFilterValue","changeTask","_props$tasks","todoList","todoListHeader","components_TodoListTitle","components_AddNewItemForm","components_TodoListFilter","components_TodoListTasks","Number","authAPI","email","password","rememberMe","captcha","securityAPI","userId","login","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","response","_response$data$data","_login","sent","getCaptchaUrl","_context3","url","authReducer","compose","auth","addTodolistTC","setTodolistsTC","logout","_context4","withRouter","components_TodoList","Fragment","header","banner","logFrom","name","logoutBtn","react_router","to","App","FormControl","_ref","_ref$meta","meta","touched","children","hasError","s","formControl","Input","restProps","child","objectWithoutProperties","FormsControls_FormControl","assign","createField","validate","component","text","Field","required","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","src","alt","formSummaryError","message","_context2","messages","stopSubmit","_error","Login_LoginForm","formData","initialized","appReducer","AppContainer","app","initializeApp","promise","Promise","all","exact","path","render","components_TodolistAPP","components_Login_Login","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","ReactDOM","react_router_dom","es","src_App","document","getElementById","textarea","textareaDialog","errorMessage","inputField"],"mappings":"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","file":"static/js/main.0143ff87.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TodoListTask_task__3sK6e\",\"taskDone\":\"TodoListTask_taskDone__2NpFM\",\"heading\":\"TodoListTask_heading__1h1Sf\",\"wrapper\":\"TodoListTask_wrapper__2uJL6\",\"textContainer\":\"TodoListTask_textContainer__rY4CA\",\"inp\":\"TodoListTask_inp__jEYiF\",\"inpDate\":\"TodoListTask_inpDate__3tST2\",\"select\":\"TodoListTask_select__3Ovb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__1Rcue\"};","import React, {useState} from 'react';\r\nimport style from '../styles/TodoListTask.module.css';\r\n\r\n\r\nexport const DateForm = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const onDateChanged = (e) => {\r\n        setEditMode(false);\r\n        props.changeDate(props.id, e.currentTarget.value);\r\n    };\r\n\r\n    let dateFormat = require('dateformat');\r\n\r\n    let now = new Date(props.date);\r\n\r\n    let setDate = props.date\r\n        ? dateFormat(now, \"dd-mm-yyyy\")\r\n        : `set ${props.title}`;\r\n\r\n    let startValue = props.date\r\n        ? props.date\r\n        : props.addedDate;\r\n\r\n    let min = new Date(props.addedDate);\r\n    let value = new Date(startValue);\r\n\r\n    return (\r\n        <div className={style.textContainer}>\r\n            <span className={style.heading}>{props.title}:&nbsp;</span>\r\n            {\r\n                editMode\r\n                    ? <input className={style.inpDate}\r\n                             type=\"date\"\r\n                             value={dateFormat(value, \"yyyy-mm-dd\")}\r\n                             min={dateFormat(min, \"yyyy-mm-dd\")} max=\"2021-12-31\"\r\n                             autoFocus={true}\r\n                             onBlur={onDateChanged}\r\n                             onChange={onDateChanged}/>\r\n                    : <span onClick={activateEditMode}>\r\n                        {setDate}.&nbsp;</span>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DateForm;\r\n\r\n","import React, {useState} from 'react';\r\nimport style from '../styles/TodoListTask.module.css';\r\n\r\nexport const Priority = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const onPriorityChanged = (e) => {\r\n        props.changePriority(props.id, e.currentTarget.value);\r\n        deactivateEditMode();\r\n    };\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n    };\r\n\r\n    const onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            deactivateEditMode();\r\n        }\r\n    };\r\n\r\n    let priorityTitle = \"\";\r\n\r\n    switch (props.priority) {\r\n        case 0:\r\n            priorityTitle = \"Low\";\r\n            break;\r\n        case 1:\r\n            priorityTitle = \"Middle\";\r\n            break;\r\n        case 2:\r\n            priorityTitle = \"High\";\r\n            break;\r\n        case 3:\r\n            priorityTitle = \"Urgently\";\r\n            break;\r\n        case 4:\r\n            priorityTitle = \"Later\";\r\n            break;\r\n    }\r\n\r\n    let select = props.priority;\r\n    return (\r\n        <div className={style.textContainer}>\r\n            <span className={style.heading}>Priority: </span>\r\n            {\r\n                editMode\r\n                    ? <select className={style.select}\r\n                        autoFocus={true}\r\n                              onKeyDown={onKeyPress}\r\n                              onChange={onPriorityChanged}\r\n                              onBlur={deactivateEditMode}>\r\n                        <option selected={select === 0} value=\"0\">Low</option>\r\n                        <option selected={select === 1} value=\"1\">Middle</option>\r\n                        <option selected={select === 2} value=\"2\">High</option>\r\n                        <option selected={select === 3} value=\"3\">Urgently</option>\r\n                        <option selected={select === 4} value=\"4\">Later</option>\r\n                    </select>\r\n                    : <span onClick={activateEditMode}>{priorityTitle}</span>\r\n            }.&nbsp;\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Priority;\r\n\r\n","import React, {useState} from 'react';\r\nimport style from '../styles/TodoListTask.module.css';\r\n\r\n\r\nexport const TaskText = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newTitle, setNewTitle] = useState(props.title);\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.changeText(props.id, newTitle);\r\n    };\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            deactivateEditMode();\r\n        }\r\n    };\r\n\r\n    const onTitleChanged = (e) => {\r\n        setNewTitle(e.currentTarget.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={style.textContainer}>\r\n            <span className={style.heading}>{props.taskTitle}:&nbsp;</span>\r\n            {\r\n                editMode\r\n                    ? <input className={style.inp}\r\n                        onBlur={deactivateEditMode}\r\n                             onChange={onTitleChanged}\r\n                             autoFocus={true}\r\n                             value={newTitle}\r\n                             onKeyPress={onKeyPress}\r\n                             placeholder={props.placeholder}/>\r\n                    : <span onClick={activateEditMode}\r\n                            placeholder={props.placeholder}>\r\n                        {props.title ? props.title : props.placeholder}.&nbsp;</span>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskText;\r\n\r\n","import React from 'react';\r\nimport style from '../styles/TodoListTask.module.css';\r\n\r\nexport const AddDateForm = (props) => {\r\n\r\n    let dateFormat = require('dateformat');\r\n    let now = new Date(props.addedDate);\r\n\r\n    return (\r\n        <div className={style.textContainer}>\r\n                <span className={style.heading}>\r\n                    Added date:&nbsp;\r\n                </span>{dateFormat(now, \"H:MM / dd-mm-yyyy\")}.&nbsp;\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default AddDateForm;\r\n\r\n","import React from 'react';\nimport style from '../styles/TodoListTask.module.css';\nimport DateForm from \"./DateForm\";\nimport Priority from \"./Priority\";\nimport TaskText from \"./TaskText\";\nimport AddDateForm from \"./AddDateForm\";\nimport {IconButton} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nexport const TodoListTask = (props) => {\n\n    const onIsDoneChanged = (e) => {\n        props.changeStatus(props.task.id, e.currentTarget.checked);\n    };\n\n    const onDeleteTask = () => {\n        props.deleteTask(props.task.id);\n    };\n\n    const containerCssClass = props.task.completed ? style.taskDone : style.task;\n\n    return (\n        <div className={containerCssClass}>\n            <div>\n                <IconButton aria-label=\"delete\" onClick={onDeleteTask}>\n                    <DeleteIcon color=\"primary\"/>\n                </IconButton>\n                <Checkbox\n                    checked={props.task.completed === true}\n                    onChange={onIsDoneChanged}\n                    value=\"checkedB\"\n                    color=\"primary\"\n                    inputProps={{'aria-label': 'secondary checkbox',}}/>\n            </div>\n            <TaskText taskTitle={'Title'}\n                      title={props.task.title}\n                      changeText={props.changeTitle}\n                      id={props.task.id}\n                      placeholder={'set title'}/>\n            <TaskText taskTitle={'Description'}\n                      title={props.task.description}\n                      changeText={props.changeDescription}\n                      id={props.task.id}\n                      placeholder={'set description'}/>\n            <Priority priority={props.task.priority}\n                      changePriority={props.changePriority}\n                      id={props.task.id}/>\n\n            <AddDateForm addedDate={props.task.addedDate}/>\n\n            <DateForm changeDate={props.changeStartDate}\n                      id={props.task.id}\n                      addedDate={props.task.addedDate}\n                      date={props.task.startDate}\n                      title={'start date'}/>\n            <DateForm changeDate={props.changeDeadline}\n                      id={props.task.id}\n                      addedDate={props.task.addedDate}\n                      date={props.task.deadline}\n                      title={'deadline'}/>\n        </div>\n    );\n\n};\n\nexport default TodoListTask;\n\n","import React from 'react';\nimport style from '../App.module.css';\nimport TodoListTask from \"./TodoListTask\";\n\nexport const TodoListTasks = (props) => {\n    const tasksElements = props.tasks.map(task => {\n            return <TodoListTask task={task}\n                                 changeStatus={props.changeStatus}\n                                 changeTitle={props.changeTitle}\n                                 deleteTask={props.deleteTask}\n                                 changePriority={props.changePriority}\n                                 changeDescription={props.changeDescription}\n                                 changeStartDate={props.changeStartDate}\n                                 changeDeadline={props.changeDeadline}\n                                 key={props.tasks.id}/>\n\n        })\n    ;\n    return (\n        <div className={style.tasks}>\n            {tasksElements}\n        </div>\n    );\n};\n\nexport default TodoListTasks;\n\n","import React, {useState} from 'react';\nimport style from '../styles/TodoListFilter.module.css';\nimport Button from \"@material-ui/core/Button\";\n\n\nexport const TodoListFilter = (props) => {\n\n    const [isHidden, setHiddenMode] = useState(false);\n\n    const onAllFilterClick = () => {\n        props.changeFilter(\"All\");\n    };\n    const onCompletedFilterClick = () => {\n        props.changeFilter(\"Completed\");\n    };\n    const onActiveFilterClick = () => {\n        props.changeFilter(\"Active\");\n    };\n    const onShowFiltersClick = () => {\n        setHiddenMode(true);\n    };\n    const onHideFiltersClick = () => {\n        setHiddenMode(false);\n    };\n\n    let classForAll = props.filterValue === \"All\" ? style.filterActive : \"\";\n    let classForCompleted = props.filterValue === \"Completed\" ? style.filterActive : \"\";\n    let classForActive = props.filterValue === \"Active\" ? style.filterActive : \"\";\n\n    return (\n        <div className={style.todoListFilter}>\n            <div className={style.isHow}>\n                {!isHidden && <span onClick={onShowFiltersClick}>hide filter</span>}\n                {isHidden && <span onClick={onHideFiltersClick}>show filter</span>}\n            </div>\n            {\n                !isHidden && <div className={style.buttons}>\n                    <Button color=\"primary\"\n                            onClick={onAllFilterClick}\n                            className={classForAll}>All</Button>\n                    <Button color=\"primary\"\n                            onClick={onCompletedFilterClick}\n                            className={classForCompleted}>Completed</Button>\n                    <Button  color=\"primary\"\n                             onClick={onActiveFilterClick}\n                             className={classForActive}>Active</Button>\n                </div>\n            }\n\n        </div>\n    );\n};\n\nexport default TodoListFilter;\n\n","import React, {useState} from 'react';\nimport style from '../styles/TodoListTitle.module.css';\nimport {IconButton} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nexport const TodoListTitle = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [newTitle, setNewTitle] = useState(props.title);\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.changeTodolistTitle(newTitle, props.id);\n    };\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n    const onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            deactivateEditMode();\n        }\n    };\n\n    const onTitleChanged = (e) => {\n        setNewTitle(e.currentTarget.value);\n    };\n\n    return (\n        <div className={style.container}>\n            <div className={style.todoListTitle}>\n                {editMode\n                    ? <input onBlur={deactivateEditMode}\n                             onChange={(e) => {\n                                 onTitleChanged(e)\n                             }}\n                             autoFocus={true}\n                             value={newTitle}\n                             onKeyPress={onKeyPress}\n                             className={style.input}/>\n                    : <span onClick={activateEditMode}\n                            className={style.title}>\n                    {props.title} &nbsp;\n            </span>}\n            </div>\n            <div>\n                <IconButton aria-label=\"delete\" onClick={props.onDelete}>\n                    <DeleteIcon color=\"primary\"/>\n                </IconButton>\n            </div>\n        </div>\n    );\n};\n\nexport default TodoListTitle;\n\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/todo-lists/\",\r\n    headers: {\r\n        \"API-KEY\": \"99877a27-c404-4003-9d7e-bbb983559996\"\r\n    }\r\n});\r\n\r\n\r\nexport const api = {\r\n    createTask(newTaskTitle, todolistId) {\r\n        return instance.post(`${todolistId}/tasks`, {title: newTaskTitle})\r\n    },\r\n    createTodolist(title) {\r\n        return instance.post(\"\", {title: title})\r\n    },\r\n    getTodolists() {\r\n        return instance.get(\"\")\r\n    },\r\n    updateTask(task) {\r\n        return instance.put('tasks', task)\r\n    },\r\n    deleteTodolist(id) {\r\n        return instance.delete('' + id)\r\n    },\r\n    deleteTask(id) {\r\n        return instance.delete(`tasks/ ${id}`)\r\n    },\r\n    getTasks(todolistId) {\r\n        return instance.get(`${todolistId}/tasks`)\r\n    },\r\n    updateTitleTodolist(todolistId, newTitle) {\r\n        return instance.put(`${todolistId}`, {title: newTitle})\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};\r\n","import {api} from \"../api/api\";\r\n\r\nexport const ADD_TODOLIST = \"TodoList/Reducer/ADD-TODOLIST\";\r\nexport const DELETE_TODOLIST = \"TodoList/Reducer/DELETE-TODOLIST\";\r\nexport const DELETE_TASK = \"TodoList/Reducer/DELETE-TASK\";\r\nexport const ADD_TASK = \"TodoList/Reducer/ADD-TASK\";\r\nexport const SET_TASKS = \"TodoList/Reducer/SET_TASKS\";\r\nexport const UPDATE_TASK = \"TodoList/Reducer/UPDATE-TASK\";\r\nexport const SET_TODOLISTS = \"TodoList/Reducer/SET_TODOLISTS\";\r\nexport const UPDATE_TODOLIST = \"TodoList/Reducer/UPDATE_TODOLIST\";\r\n\r\nconst initialState = {\r\n    \"todolists\": []\r\n};\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TASKS:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id !== action.todolistId) {\r\n                        return tl;\r\n                    } else {\r\n                        return {...tl, tasks: action.tasks}\r\n                    }\r\n                })\r\n            };\r\n        case SET_TODOLISTS:\r\n\r\n            return {\r\n                ...state,\r\n                todolists: action.todolists.map(tl => {\r\n                    return {...tl, tasks: [] }\r\n                })\r\n            };\r\n        case ADD_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: [...state.todolists, action.newTodolist]\r\n            };\r\n        case DELETE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(tl => tl.id !== action.todolistId)\r\n            };\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.filter(t => t.id !== action.taskId)\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {...tl, tasks: [...tl.tasks, action.newTask]}\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case UPDATE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.map(t => {\r\n                                if (t.id !== action.taskId) {\r\n                                    return t;\r\n                                } else {\r\n                                    return {...t, ...action.obj};\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            };\r\n        case UPDATE_TODOLIST:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n\r\n                            ...tl, title: action.newTitle\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            }\r\n    }\r\n    return state;\r\n};\r\n\r\nconst updateTaskAC = (taskId, obj, todolistId) => {\r\n\r\n    return {type: UPDATE_TASK, taskId, obj, todolistId};\r\n};\r\nconst updateTodolistAC = (todolistId, newTitle) => {\r\n\r\n    return {type: UPDATE_TODOLIST, todolistId, newTitle};\r\n\r\n};\r\nconst setTasksAC = (tasks, todolistId) => {\r\n    return {type: SET_TASKS, tasks, todolistId};\r\n};\r\nconst deleteTodolistAC = (todolistId) => {\r\n    return {\r\n        type: DELETE_TODOLIST,\r\n        todolistId: todolistId\r\n    };\r\n};\r\nconst deleteTaskAC = (taskId, todolistId) => {\r\n    return {\r\n        type: DELETE_TASK,\r\n        taskId,\r\n        todolistId\r\n\r\n    };\r\n};\r\nconst addTaskAC = (newTask, todolistId) => ({type: ADD_TASK, newTask, todolistId});\r\n\r\nconst addTodolistAC = (newTodolist) => {\r\n    return {\r\n        type: ADD_TODOLIST,\r\n        newTodolist: newTodolist\r\n    }\r\n};\r\nconst setTodolistsAC = (todolists) => {\r\n    return {\r\n        type: SET_TODOLISTS,\r\n        todolists: todolists\r\n    }\r\n};\r\n\r\nexport const addTaskTC = (newText, todolistId) => {\r\n    return (dispatch) => {\r\n        api.createTask(newText, todolistId).then(res => {\r\n            let newTask = res.data.data.item;\r\n            dispatch(addTaskAC(newTask, todolistId))\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteTaskTC = (taskId, todolistId) => {\r\n    return (dispatch) => {\r\n        api.deleteTask(taskId, todolistId).then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(deleteTaskAC(taskId, todolistId))\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteTodolistTC = (todolistId) => {\r\n    return (dispatch) => {\r\n        api.deleteTodolist(todolistId).then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(deleteTodolistAC(todolistId))\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const setTodolistsTC = () => {\r\n    return (dispatch) => {\r\n        api.getTodolists().then(res => {\r\n            dispatch(setTodolistsAC(res.data))\r\n        })\r\n    }\r\n};\r\n\r\nexport const setTasksTC = (todolistId) => {\r\n    return (dispatch) => {\r\n        api.getTasks(todolistId).then(res => {\r\n            dispatch(setTasksAC(res.data.items, todolistId))\r\n        })\r\n    }\r\n};\r\n\r\nexport const updateTaskTC = (taskId, obj, todolistId) => {\r\n    return (dispatch, getState) => {\r\n        getState()\r\n            .todo.todolists.find(tl => tl.id === todolistId)\r\n            .tasks.forEach(t => {\r\n\r\n            if (t.id === taskId) {\r\n                api.updateTask({...t, ...obj}).then(() => {\r\n                    dispatch(updateTaskAC(taskId, obj, todolistId))\r\n                })\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const updateTodolistTC = (todolistId, newTitle) => {\r\n    return (dispatch, getState) => {\r\n        getState()\r\n            .todo.todolists.forEach(tl => {\r\n            if (tl.id === todolistId) {\r\n                api.updateTitleTodolist(tl.id, newTitle).then((res) => {\r\n                                        if (res.data.resultCode === 0) {\r\n                        dispatch(updateTodolistAC(todolistId, newTitle))\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport const addTodolistTC = (title) => {\r\n    return (dispatch) => {\r\n        api.createTodolist(title).then(res => {\r\n            dispatch(addTodolistAC(res.data.data.item))\r\n        })\r\n    }\r\n};\r\n\r\n\r\nexport default todoReducer;\r\n","import React, {useState} from 'react';\nimport style from '../styles/AddNewItemForm.module.css';\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from '@material-ui/icons/Add'\n\n\nexport const AddNewItemForm = (props) => {\n\n    const [error, setError] = useState(false);\n    const [title, setNewTitle] = useState('');\n\n\n    const onAddItemClick = () => {\n        setNewTitle(title);\n        if (title === \"\") {\n\n            setError(true);\n        } else {\n            setError(false);\n            props.addItem(title);\n        }\n        setNewTitle('')\n    };\n\n    const onTitleChanged = (e) => {\n        setNewTitle(e.currentTarget.value);\n        setError(false);\n    };\n\n\n    const onKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            onAddItemClick();\n        }\n    };\n\n    let classNameForInput = error ? style.error : \"\";\n    return (\n        <div className={style.container}>\n            <div className={style.newForm}>\n                <input className={classNameForInput}\n                       type=\"text\"\n                       onChange={onTitleChanged}\n                       onKeyPress={onKeyPress}\n                       value={title}\n                       id={props.labelInput}/>\n                <label htmlFor={props.labelInput}>{props.placeholder}</label>\n            </div>\n            <div className={style.containerBtn}>\n                <Fab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={onAddItemClick}>\n                    <AddIcon/>\n                </Fab>\n            </div>\n\n        </div>\n    );\n};\n\nexport default AddNewItemForm;\n\n","import React, {useState, useEffect} from 'react';\nimport style from '../styles/TodoList.module.css';\nimport TodoListTasks from \"./TodoListTasks\";\nimport TodoListFilter from \"./TodoListFilter\";\nimport TodoListTitle from \"./TodoListTitle\";\nimport {connect} from \"react-redux\";\nimport {addTaskTC, deleteTaskTC, deleteTodolistTC, setTasksTC, updateTaskTC, updateTodolistTC}\n    from \"../redux/todo-reducer\";\nimport AddDateForm from \"./AddDateForm\";\nimport AddNewItemForm from \"./AddNewItemForm\";\n\n\nexport const TodoList = (props) => {\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await props.setTasksTC(props.id);\n        };\n        fetchData()\n    }, [props.id]);\n\n    const [filterValue, setNewFilterValue] = useState('All');\n\n    const addTask = (newText) => {\n        props.addTaskTC(newText, props.id);\n    };\n\n    const changeFilter = (filterValue) => {\n\n        setNewFilterValue(filterValue);\n    };\n\n    const changeTask = (taskId, obj) => {\n        props.updateTaskTC(taskId, obj, props.id);\n    };\n\n    const changeTodolistTitle = (newTitle) => {\n        props.updateTodolistTC(props.id, newTitle);\n    };\n\n    const changeStatus = (taskId, completed) => {\n        changeTask(taskId, {completed});\n    };\n\n    const changeTitle = (taskId, title) => {\n        changeTask(taskId, {title});\n    };\n    const changePriority = (taskId, priority) => {\n        changeTask(taskId, {priority: Number(priority)});\n    };\n    const changeDescription = (taskId, description) => {\n        changeTask(taskId, {description});\n    };\n\n    const changeStartDate = (taskId, startDate) => {\n        changeTask(taskId, {startDate});\n    };\n    const changeDeadline = (taskId, deadline) => {\n        changeTask(taskId, {deadline});\n    };\n\n    const deleteTodolist = () => {\n        props.deleteTodolistTC(props.id);\n    };\n\n    const deleteTask = (taskId) => {\n        props.deleteTaskTC(taskId, props.id);\n    };\n\n    const {tasks = []} = props;\n\n    return (\n        <div className={style.todoList}>\n            <div className={style.todoListHeader}>\n                <TodoListTitle title={props.title}\n                               onDelete={deleteTodolist}\n                               changeTodolistTitle={changeTodolistTitle}\n                               id={props.id}/>\n                <AddNewItemForm addItem={addTask}\n                                placeholder={'Add new task'}\n                                labelInput={\"labelInputForTask\"}/>\n                <AddDateForm addedDate={props.addedDate}/>\n            </div>\n            <TodoListFilter changeFilter={changeFilter} filterValue={filterValue}/>\n            <TodoListTasks changeStatus={changeStatus}\n                           changeTitle={changeTitle}\n                           deleteTask={deleteTask}\n                           changePriority={changePriority}\n                           changeDescription={changeDescription}\n                           changeStartDate={changeStartDate}\n                           changeDeadline={changeDeadline}\n                           tasks={tasks.filter(t => {\n                               if (filterValue === \"All\") {\n                                   return true;\n                               }\n                               if (filterValue === \"Active\") {\n                                   return t.completed === false;\n                               }\n                               if (filterValue === \"Completed\") {\n                                   return t.completed === true;\n                               }\n                           })}/>\n\n        </div>\n    );\n};\n\nconst ConnectedTodoList = connect(null, {\n    deleteTaskTC, deleteTodolistTC, updateTaskTC,\n    setTasksTC, addTaskTC, updateTodolistTC\n})(TodoList);\n\nexport default ConnectedTodoList;\n\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"99877a27-c404-4003-9d7e-bbb983559996\"\r\n    }\r\n});\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};\r\n","import {authAPI, securityAPI} from \"../api/authApi\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = '/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = '/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n            return {\r\n\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe,captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe,captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        const message = response.data.messages.length > 0\r\n            ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React, {useEffect} from 'react';\r\nimport style from '../App.module.css';\r\nimport TodoList from \"./TodoList\";\r\nimport AddNewItemForm from \"./AddNewItemForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {addTodolistTC, setTodolistsTC} from \"../redux/todo-reducer\";\r\nimport {getAuthUserData, logout} from \"../redux/auth-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nexport const TodolistAPP = (props) => {\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await props.setTodolistsTC();\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n\r\n    const addTodoList = (title) => {\r\n        props.addTodolistTC(title);\r\n    };\r\n\r\n    const todolists = props\r\n        .todolists\r\n        .map(tl => <TodoList\r\n            key={tl.id}\r\n            id={tl.id}\r\n            title={tl.title}\r\n            tasks={tl.tasks}\r\n            addedDate={tl.addedDate}/>);\r\n    return (\r\n        <>\r\n            <div className={style.header}>\r\n                <div>\r\n                    <AddNewItemForm addItem={addTodoList}\r\n                                    placeholder={'Add new to do list'}\r\n                                    labelInput={\"labelInput\"}/>\r\n                </div>\r\n                <div>\r\n                    <span className={style.title}>to do list app</span>\r\n                </div>\r\n                <div className={style.banner}>\r\n                    {props.isAuth ? <div className={style.logFrom}>\r\n                            <h3 className={style.name}>{props.login}</h3>\r\n                            <span className={style.logoutBtn} onClick={() => props.logout()}>Logout</span>\r\n                        </div> :\r\n                        <Redirect to='/login'/>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={style.App}>\r\n                {todolists}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todolists: state.todo.todolists,\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        addTodolistTC,\r\n        setTodolistsTC,\r\n        getAuthUserData,\r\n        logout\r\n    }),\r\n    withRouter,\r\n)(TodolistAPP);","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validate}\r\n               component={component}\r\n               {...props}/>{text}\r\n    </div>);\r\n\r\nexport const Dialog = ({input, meta}) => {\r\n\r\n    const error = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <textarea className={error ? s.textareaDialog + ' ' + s.error :\r\n                s.textareaDialog} {...input} />\r\n            {error && <span className={s.errorMessage}>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\n","export const required = value => value ? undefined : ' ';\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    return value.length > maxLength ? `Max length is ${maxLength} symbols` : undefined\r\n};\r\n\r\n","import React from 'react'\r\nimport { reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"./FormsControls/FormsControls\";\r\nimport {required} from \"./utils/validator\";\r\nimport s from './FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input,\r\n                {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"},\r\n                \"remember me\")}\r\n\r\n            {props.captchaUrl && <img src={props.captchaUrl} alt=\"captcha\"/>}\r\n            {props.captchaUrl && createField(\"Symbols from image\", \"captcha\",\r\n                [required], Input)}\r\n\r\n            {props.error && <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n                <button>Login</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nexport default LoginReduxForm","import React from 'react'\r\nimport LoginReduxForm from \"./LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './Login.module.css'\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/todolist\"}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <span>Credentials for testing</span>\r\n            <span>Email: <b>aneken310@gmail.com</b></span>\r\n            <span>Password: <b>test</b></span>\r\n            <h2>LOGIN</h2>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = '/app/INITIALIZED_SUCCESS';\r\n\r\nconst initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS,});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    const promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","import React from 'react';\nimport TodolistAPP from \"./components/TodolistAPP\";\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\n\nexport const App = () => {\n\n    return (\n        <div>\n            <Switch>\n                <Route exact path='/' render={() => <Redirect to={'/todolist'}/>}/>\n                <Route path='/todolist' render={() => <TodolistAPP/>}/>\n                <Route path='/login' render={() => <Login/>}/>\n                <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\n            </Switch>\n        </div>\n\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nexport default AppContainer\n\n\n","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\nimport todoReducer from \"./todo-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    todo:todoReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3MRyD\",\"header\":\"App_header__Z2y3y\",\"title\":\"App_title__3Ci0S\",\"tasks\":\"App_tasks__3YtUf\",\"banner\":\"App_banner__2pupI\",\"logFrom\":\"App_logFrom__26GjE\",\"login\":\"App_login__2K61U\",\"logoutBtn\":\"App_logoutBtn__dgs4L\",\"name\":\"App_name__269oQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__MRZn3\",\"error\":\"FormsControls_error__3Cgmk\",\"formSummaryError\":\"FormsControls_formSummaryError__EnNmT\",\"textarea\":\"FormsControls_textarea__3E1rp\",\"textareaDialog\":\"FormsControls_textareaDialog__1ebHZ\",\"errorMessage\":\"FormsControls_errorMessage__1PGVr\",\"inputField\":\"FormsControls_inputField__3Esw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListFilter\":\"TodoListFilter_todoListFilter__EuTw9\",\"isHow\":\"TodoListFilter_isHow__12RUN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TodoListTitle_container__3RfeJ\",\"title\":\"TodoListTitle_title__3V35V\",\"todoListTitle\":\"TodoListTitle_todoListTitle__1flMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddNewItemForm_container__2V52p\",\"newForm\":\"AddNewItemForm_newForm__2cF6S\",\"containerBtn\":\"AddNewItemForm_containerBtn__tVAur\",\"error\":\"AddNewItemForm_error__2isHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TodoList_todoList__3a1Ok\",\"todoListHeader\":\"TodoList_todoListHeader__10Ja4\"};"],"sourceRoot":""}